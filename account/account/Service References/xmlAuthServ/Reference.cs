//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace account.xmlAuthServ {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="xmlAuthServ.Iauth")]
    public interface Iauth {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iauth/DoWork", ReplyAction="http://tempuri.org/Iauth/DoWorkResponse")]
        string DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iauth/DoWork", ReplyAction="http://tempuri.org/Iauth/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iauth/Registeration", ReplyAction="http://tempuri.org/Iauth/RegisterationResponse")]
        string Registeration(string userName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iauth/Registeration", ReplyAction="http://tempuri.org/Iauth/RegisterationResponse")]
        System.Threading.Tasks.Task<string> RegisterationAsync(string userName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iauth/Login", ReplyAction="http://tempuri.org/Iauth/LoginResponse")]
        string Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iauth/Login", ReplyAction="http://tempuri.org/Iauth/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string userName, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IauthChannel : account.xmlAuthServ.Iauth, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IauthClient : System.ServiceModel.ClientBase<account.xmlAuthServ.Iauth>, account.xmlAuthServ.Iauth {
        
        public IauthClient() {
        }
        
        public IauthClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IauthClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IauthClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IauthClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork() {
            return base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string Registeration(string userName, string email, string password) {
            return base.Channel.Registeration(userName, email, password);
        }
        
        public System.Threading.Tasks.Task<string> RegisterationAsync(string userName, string email, string password) {
            return base.Channel.RegisterationAsync(userName, email, password);
        }
        
        public string Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }

        internal object RegisterationStaff(string text1, string text2, string v)
        {
            throw new NotImplementedException();
        }
    }
}
