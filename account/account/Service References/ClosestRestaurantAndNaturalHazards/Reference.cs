//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace account.ClosestRestaurantAndNaturalHazards {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClosestRestaurantAndNaturalHazards.IClosestRestaurantAndNaturalHazardsService")]
    public interface IClosestRestaurantAndNaturalHazardsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/FindClosestRestaura" +
            "nts", ReplyAction="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/FindClosestRestaura" +
            "ntsResponse")]
        string[] FindClosestRestaurants(string address, decimal travelDistance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/FindClosestRestaura" +
            "nts", ReplyAction="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/FindClosestRestaura" +
            "ntsResponse")]
        System.Threading.Tasks.Task<string[]> FindClosestRestaurantsAsync(string address, decimal travelDistance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/NaturalHazardsServi" +
            "ce", ReplyAction="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/NaturalHazardsServi" +
            "ceResponse")]
        decimal NaturalHazardsService(decimal latitude, decimal longitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/NaturalHazardsServi" +
            "ce", ReplyAction="http://tempuri.org/IClosestRestaurantAndNaturalHazardsService/NaturalHazardsServi" +
            "ceResponse")]
        System.Threading.Tasks.Task<decimal> NaturalHazardsServiceAsync(decimal latitude, decimal longitude);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClosestRestaurantAndNaturalHazardsServiceChannel : account.ClosestRestaurantAndNaturalHazards.IClosestRestaurantAndNaturalHazardsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClosestRestaurantAndNaturalHazardsServiceClient : System.ServiceModel.ClientBase<account.ClosestRestaurantAndNaturalHazards.IClosestRestaurantAndNaturalHazardsService>, account.ClosestRestaurantAndNaturalHazards.IClosestRestaurantAndNaturalHazardsService {
        
        public ClosestRestaurantAndNaturalHazardsServiceClient() {
        }
        
        public ClosestRestaurantAndNaturalHazardsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClosestRestaurantAndNaturalHazardsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClosestRestaurantAndNaturalHazardsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClosestRestaurantAndNaturalHazardsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] FindClosestRestaurants(string address, decimal travelDistance) {
            return base.Channel.FindClosestRestaurants(address, travelDistance);
        }
        
        public System.Threading.Tasks.Task<string[]> FindClosestRestaurantsAsync(string address, decimal travelDistance) {
            return base.Channel.FindClosestRestaurantsAsync(address, travelDistance);
        }
        
        public decimal NaturalHazardsService(decimal latitude, decimal longitude) {
            return base.Channel.NaturalHazardsService(latitude, longitude);
        }
        
        public System.Threading.Tasks.Task<decimal> NaturalHazardsServiceAsync(decimal latitude, decimal longitude) {
            return base.Channel.NaturalHazardsServiceAsync(latitude, longitude);
        }
    }
}
